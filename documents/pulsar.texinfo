\input texinfo   @c -*-texinfo-*-
@comment $Id@w{$}
@comment %**start of header
@comment @include version.texi
@set NAME Pulsar Sequencer
@set UPDATED 11 Novenber 2018
@set VERSION 0.1

@settitle @value{NAME} @value{VERSION}
@syncodeindex pg cp
@comment %**end of header
@copying
This manual is for @value{NAME} (version @value{VERSION}, @value{UPDATED}),
which is a music sequencer system build on Scheme language.

Copyright @copyright{} 2018 Atsushi Oka.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation

@end copying

@dircategory Pulsar Music Sequencer System 
@direntry
* Pulsar: Music Sequencer System 
@end direntry

@titlepage
@title @value{NAME}
@subtitle for version @value{VERSION}, @value{UPDATED}
@author Atsushi Oka(@email{ats.creativity@@gmail.com})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top The Pulsar Music Sequencer

Pulsar is a music sequencer program which allows users to write music as Lisp
Scheme programs.

In this system, musical notes and other informations are written as Scheme's
association lists. 

The musical notes can be dynamically generated association lists on-the-fly; a
users can also interact with their programs to affect where the music go to.

With this system, you can learn music and Lisp Scheme at same time.

Pulsar is written in Java8 and Kawa, and processes MIDI data via with Jack
Audio Connection Kit.  Pulsar has been developed on the Ubuntu 16.04. Pulsar
is expected to run on any Unix-like systems and versions of Windows.

This manual is for @value{NAME} version @value{VERSION}.

@end ifnottex

@c * System Requirements::
@c * News::
@c * Features::
@c * Community::
@menu
* A Chapter Contains A Small Section::
* GNU Free Documentation License::
* Index::
@end menu

@c @node News
@chapter News

The Pulsar Music Sequencer has just been released; this application is very
new and has not been fully tested yet. 

Please be careful to use this application.

@c @node Features
@chapter Features

@itemize
@item Enables you to write pieces of music as Lisp Scheme program.
@item Built with Kawa a very powerful Lisp Scheme implementation.
@item Works with JACK Audio Connection Kit and can connect to any synthesizer
      applications support JACK.
@item Includes Kawapad; Kawapad is an editor to edit Scheme program 
@itemize
@item Kawapad can prettify Lisp code.
@item Execute a block of code on-the-fly.
@item Kawapad is extensible by Kawa-Scheme.
@end itemize

@end itemize


@c @node Community
@chapter Community

Currently Pulsar has no community. Currently Pulsar is developed by only one
developer (me) and there is no user at all but the developer. The developer
(me) strongly needs your help to improve the Pulsar.

@c @node System Requirements
@chapter How to Run Pulsar

@section System Requirements

@itemize
@item Any operating systems that can run the other subsystems that are described here.
@item Java 8
@item JNA Java Native Access
@item Jack Audio Connection Kit
@end itemize

Pulsar has been developed and tested in Ubuntu 16.04. A cursory experiment to run
Pulsar in Windows 10 with Windows JACK was succeeded. It is still unknown if
Pulsar can run in OS X and further experiments are needed.

@section Installation

Currently Pulsar has no installer. Though, Pulsar is a simple executable JAR file and
no installation is required. Place it anywhere convenient to run Pulsar.

@section Directories
When Pulsar run at first time, Pulsar makes a directory @code{$HOME/.pulsar}.
And created two files :
@itemize
@item @code{init.scm}
@item @code{kawapad-extension.scm}
@end itemize

You can customize behavior of Pulsar by editing these two files.


@section Execution

Pulsar is a simple executable JAR file;
before executing Pulsar, please make sure @code{java} is placed on a directory
in @code{PATH}, and then execute 
@command{ java -jar /pulsar.jar }
may start Pulsar.

If java is properly configured, just double clicking the jar file can also
start Pulsar.

Currently Pulsar outputs its error messages into @code{stterr}; it is necessary
to execute it in a terminal screen to read its error messages.

@chapter Pulsar Music Sequencer Tutorial

@section Introduction

@section Getting Started

@example
    (hello foo bar)
@end example



@chapter Reference Manual

@node A Chapter Contains A Small Section

@chapter A Chapter Contains A Small Section

A chapter is here.


@section A Small Section

This is an attempt to exhibit what sections look like.

@enumerate
@item hello
@item world
@item foo
@end enumerate

@itemize
@item hello
@item world
@item foo
@end itemize

@itemize
@item hello
@item world
@item foo

@itemize
@item hello
@item world
@item foo
@end itemize

@end itemize

@subsection This is a subsection, here.



@pindex sample
@cindex invoking @command{sample}

This is a sample manual.  There is no sample program to
invoke, but if there were, you could see its basic usage
and command line options here.


@node GNU Free Documentation License
@appendix GNU Free Documentation License

hello
@comment @include fdl.texi


@node Index
@unnumbered Index

@printindex cp

@bye
@c vim: expandtab ts=4 spell:
